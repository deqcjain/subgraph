type AdminChanged @entity(immutable: true) {
  id: Bytes!
  previousAdmin: Bytes! 
  newAdmin: Bytes! 
}

type BeaconUpgraded @entity(immutable: true) {
  id: Bytes!
  beacon: Bytes! 
}

type FundManagerCreated @entity(immutable: true) {
  id: Bytes!
  fundManager: Bytes! 
  user: Bytes! 
  label: String! 
}

type ImplementationUpdated @entity(immutable: true) {
  id: Bytes!
  previousImpl: Bytes! 
  newImpl: Bytes! 
  typeId: BigInt! 
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: Int! 
}

type OwnershipTransferStarted @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! 
  newOwner: Bytes! 
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! 
  newOwner: Bytes! 
}

type ProtocolLibInfoUpdated @entity(immutable: true) {
  id: Bytes!
  typeId: BigInt! 
  lib: Bytes! 
}

type SetNewFundManagerImplForProxy @entity(immutable: true) {
  id: Bytes!
  proxy: Bytes! 
  newImpl: Bytes! 
  typeId: BigInt! 
}

type Upgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! 
}

type Owner @entity(immutable : true){
  id:Bytes!
  name: String!
  fundsOwned: String!
}

type Transaction @entity(immutable: true) {
  id: Bytes!
  transactionReceipt: Bytes!
}

type TransactionReceipt @entity(immutable: true) {
  id: Bytes!
  transaction: Bytes!
}

type CodeUpdated @entity(immutable: true) {
  id: Bytes!
  uuid: Bytes! 
  codeAddress: Bytes! 
}

type FundsAdded @entity(immutable: true) {
  id: Bytes!
  _user: Bytes! 
  _investmentAmount: BigInt! 
  _sharesReceived: BigInt! 
}

type LiquidityAdded @entity(immutable: true) {
  id: Bytes!
  user: Bytes! 
  externalPosition: Bytes! 
  nftId: BigInt! 
  liquidityAdded: BigInt! 
}

type LiquidityWithdrawn @entity(immutable: true) {
  id: Bytes!
  user: Bytes! 
  externalPosition: Bytes! 
  nftId: BigInt! 
  liquidityWithdrawn: BigInt! 
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! 
  previousAdminRole: Bytes! 
  newAdminRole: Bytes! 
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! 
  account: Bytes! 
  sender: Bytes! 
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! 
  account: Bytes! 
  sender: Bytes! 
}

type VaultCreated @entity(immutable: true) {
  id: Bytes!
  _user: Bytes! 
  _fundOwner: Bytes! 
  _comptrollerProxy: Bytes! 
  _vaultProxy: Bytes! 
}
