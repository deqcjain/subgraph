// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CodeUpdated extends ethereum.Event {
  get params(): CodeUpdated__Params {
    return new CodeUpdated__Params(this);
  }
}

export class CodeUpdated__Params {
  _event: CodeUpdated;

  constructor(event: CodeUpdated) {
    this._event = event;
  }

  get uuid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get codeAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FundsAdded extends ethereum.Event {
  get params(): FundsAdded__Params {
    return new FundsAdded__Params(this);
  }
}

export class FundsAdded__Params {
  _event: FundsAdded;

  constructor(event: FundsAdded) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _investmentAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _sharesReceived(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LiquidityAdded extends ethereum.Event {
  get params(): LiquidityAdded__Params {
    return new LiquidityAdded__Params(this);
  }
}

export class LiquidityAdded__Params {
  _event: LiquidityAdded;

  constructor(event: LiquidityAdded) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get externalPosition(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nftId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get liquidityAdded(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LiquidityWithdrawn extends ethereum.Event {
  get params(): LiquidityWithdrawn__Params {
    return new LiquidityWithdrawn__Params(this);
  }
}

export class LiquidityWithdrawn__Params {
  _event: LiquidityWithdrawn;

  constructor(event: LiquidityWithdrawn) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get externalPosition(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nftId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get liquidityWithdrawn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class VaultCreated extends ethereum.Event {
  get params(): VaultCreated__Params {
    return new VaultCreated__Params(this);
  }
}

export class VaultCreated__Params {
  _event: VaultCreated;

  constructor(event: VaultCreated) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _fundOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _comptrollerProxy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _vaultProxy(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ChildContract__getShareActionDetailsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class ChildContract extends ethereum.SmartContract {
  static bind(address: Address): ChildContract {
    return new ChildContract("ChildContract", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FUND_DEPLOYER(): Address {
    let result = super.call("FUND_DEPLOYER", "FUND_DEPLOYER():(address)", []);

    return result[0].toAddress();
  }

  try_FUND_DEPLOYER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "FUND_DEPLOYER",
      "FUND_DEPLOYER():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCodeAddress(): Address {
    let result = super.call("getCodeAddress", "getCodeAddress():(address)", []);

    return result[0].toAddress();
  }

  try_getCodeAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCodeAddress",
      "getCodeAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFundManagerFactory(): Address {
    let result = super.call(
      "getFundManagerFactory",
      "getFundManagerFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFundManagerFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFundManagerFactory",
      "getFundManagerFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getListOfUsersPerVault(): Array<Address> {
    let result = super.call(
      "getListOfUsersPerVault",
      "getListOfUsersPerVault():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getListOfUsersPerVault(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getListOfUsersPerVault",
      "getListOfUsersPerVault():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getPositionValueCalculator(): Address {
    let result = super.call(
      "getPositionValueCalculator",
      "getPositionValueCalculator():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPositionValueCalculator(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPositionValueCalculator",
      "getPositionValueCalculator():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getShareActionDetails(): ChildContract__getShareActionDetailsResult {
    let result = super.call(
      "getShareActionDetails",
      "getShareActionDetails():(uint256,uint256)",
      []
    );

    return new ChildContract__getShareActionDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getShareActionDetails(): ethereum.CallResult<
    ChildContract__getShareActionDetailsResult
  > {
    let result = super.tryCall(
      "getShareActionDetails",
      "getShareActionDetails():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ChildContract__getShareActionDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getUserCount(): BigInt {
    let result = super.call("getUserCount", "getUserCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getUserCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getUserCount", "getUserCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isVaultUser(param0: Address): boolean {
    let result = super.call("isVaultUser", "isVaultUser(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isVaultUser(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isVaultUser", "isVaultUser(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  liquidityAddedByUser(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "liquidityAddedByUser",
      "liquidityAddedByUser(address,uint256):(uint128)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_liquidityAddedByUser(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "liquidityAddedByUser",
      "liquidityAddedByUser(address,uint256):(uint128)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  shareActionBlockNumberLock(): BigInt {
    let result = super.call(
      "shareActionBlockNumberLock",
      "shareActionBlockNumberLock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_shareActionBlockNumberLock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "shareActionBlockNumberLock",
      "shareActionBlockNumberLock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  shareActionTimeLock(): BigInt {
    let result = super.call(
      "shareActionTimeLock",
      "shareActionTimeLock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_shareActionTimeLock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "shareActionTimeLock",
      "shareActionTimeLock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  vaultProxy(): Address {
    let result = super.call("vaultProxy", "vaultProxy():(address)", []);

    return result[0].toAddress();
  }

  try_vaultProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall("vaultProxy", "vaultProxy():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaultUsers(param0: BigInt): Address {
    let result = super.call("vaultUsers", "vaultUsers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_vaultUsers(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("vaultUsers", "vaultUsers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CallOnEnzymeCall extends ethereum.Call {
  get inputs(): CallOnEnzymeCall__Inputs {
    return new CallOnEnzymeCall__Inputs(this);
  }

  get outputs(): CallOnEnzymeCall__Outputs {
    return new CallOnEnzymeCall__Outputs(this);
  }
}

export class CallOnEnzymeCall__Inputs {
  _call: CallOnEnzymeCall;

  constructor(call: CallOnEnzymeCall) {
    this._call = call;
  }

  get _target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _signature(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CallOnEnzymeCall__Outputs {
  _call: CallOnEnzymeCall;

  constructor(call: CallOnEnzymeCall) {
    this._call = call;
  }

  get response_(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _swapArgs(): Array<DepositCall_swapArgsStruct> {
    return this._call.inputValues[5].value.toTupleArray<
      DepositCall_swapArgsStruct
    >();
  }

  get _positionArgs(): Array<DepositCall_positionArgsStruct> {
    return this._call.inputValues[6].value.toTupleArray<
      DepositCall_positionArgsStruct
    >();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall_swapArgsStruct extends ethereum.Tuple {
  get _extension(): Address {
    return this[0].toAddress();
  }

  get _actionId(): BigInt {
    return this[1].toBigInt();
  }

  get _callArgs(): Bytes {
    return this[2].toBytes();
  }
}

export class DepositCall_positionArgsStruct extends ethereum.Tuple {
  get _extension(): Address {
    return this[0].toAddress();
  }

  get _actionId(): BigInt {
    return this[1].toBigInt();
  }

  get _callArgs(): Bytes {
    return this[2].toBytes();
  }
}

export class FundDeployCall extends ethereum.Call {
  get inputs(): FundDeployCall__Inputs {
    return new FundDeployCall__Inputs(this);
  }

  get outputs(): FundDeployCall__Outputs {
    return new FundDeployCall__Outputs(this);
  }
}

export class FundDeployCall__Inputs {
  _call: FundDeployCall;

  constructor(call: FundDeployCall) {
    this._call = call;
  }

  get _fundName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _fundSymbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _feeManagerConfigData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _policyManagerConfigData(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _swapArgs(): Array<FundDeployCall_swapArgsStruct> {
    return this._call.inputValues[5].value.toTupleArray<
      FundDeployCall_swapArgsStruct
    >();
  }

  get _positionArgs(): Array<FundDeployCall_positionArgsStruct> {
    return this._call.inputValues[6].value.toTupleArray<
      FundDeployCall_positionArgsStruct
    >();
  }

  get _deployer(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class FundDeployCall__Outputs {
  _call: FundDeployCall;

  constructor(call: FundDeployCall) {
    this._call = call;
  }
}

export class FundDeployCall_swapArgsStruct extends ethereum.Tuple {
  get _extension(): Address {
    return this[0].toAddress();
  }

  get _actionId(): BigInt {
    return this[1].toBigInt();
  }

  get _callArgs(): Bytes {
    return this[2].toBytes();
  }
}

export class FundDeployCall_positionArgsStruct extends ethereum.Tuple {
  get _extension(): Address {
    return this[0].toAddress();
  }

  get _actionId(): BigInt {
    return this[1].toBigInt();
  }

  get _callArgs(): Bytes {
    return this[2].toBytes();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get _configAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _shareActionTimeLock(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _shareActionBlockNumberLock(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetSharesActionLockCall extends ethereum.Call {
  get inputs(): SetSharesActionLockCall__Inputs {
    return new SetSharesActionLockCall__Inputs(this);
  }

  get outputs(): SetSharesActionLockCall__Outputs {
    return new SetSharesActionLockCall__Outputs(this);
  }
}

export class SetSharesActionLockCall__Inputs {
  _call: SetSharesActionLockCall;

  constructor(call: SetSharesActionLockCall) {
    this._call = call;
  }

  get _duration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _blockNumberDiff(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetSharesActionLockCall__Outputs {
  _call: SetSharesActionLockCall;

  constructor(call: SetSharesActionLockCall) {
    this._call = call;
  }
}

export class TransferVaultOwnershipCall extends ethereum.Call {
  get inputs(): TransferVaultOwnershipCall__Inputs {
    return new TransferVaultOwnershipCall__Inputs(this);
  }

  get outputs(): TransferVaultOwnershipCall__Outputs {
    return new TransferVaultOwnershipCall__Outputs(this);
  }
}

export class TransferVaultOwnershipCall__Inputs {
  _call: TransferVaultOwnershipCall;

  constructor(call: TransferVaultOwnershipCall) {
    this._call = call;
  }

  get _newNominatedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferVaultOwnershipCall__Outputs {
  _call: TransferVaultOwnershipCall;

  constructor(call: TransferVaultOwnershipCall) {
    this._call = call;
  }
}

export class UpdateCodeCall extends ethereum.Call {
  get inputs(): UpdateCodeCall__Inputs {
    return new UpdateCodeCall__Inputs(this);
  }

  get outputs(): UpdateCodeCall__Outputs {
    return new UpdateCodeCall__Outputs(this);
  }
}

export class UpdateCodeCall__Inputs {
  _call: UpdateCodeCall;

  constructor(call: UpdateCodeCall) {
    this._call = call;
  }

  get newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateCodeCall__Outputs {
  _call: UpdateCodeCall;

  constructor(call: UpdateCodeCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get withdrawArgs(): Array<WithdrawFundsCallWithdrawArgsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      WithdrawFundsCallWithdrawArgsStruct
    >();
  }

  get swapData(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get shareQuantity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get redeemInUsdc(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class WithdrawFundsCallWithdrawArgsStruct extends ethereum.Tuple {
  get _extension(): Address {
    return this[0].toAddress();
  }

  get _actionId(): BigInt {
    return this[1].toBigInt();
  }

  get _callArgs(): Bytes {
    return this[2].toBytes();
  }
}
